
xynthLeds:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .interp       00000019  00008134  00008134  00000134  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .note.ABI-tag 00000020  00008150  00008150  00000150  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  2 .note.gnu.build-id 00000024  00008170  00008170  00000170  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .hash         0000016c  00008194  00008194  00000194  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  4 .dynsym       00000340  00008300  00008300  00000300  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  5 .dynstr       0000032b  00008640  00008640  00000640  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  6 .gnu.version  00000068  0000896c  0000896c  0000096c  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  7 .gnu.version_r 00000020  000089d4  000089d4  000009d4  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  8 .rel.dyn      00000008  000089f4  000089f4  000009f4  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  9 .rel.plt      00000138  000089fc  000089fc  000009fc  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
 10 .init         0000000c  00008b34  00008b34  00000b34  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 11 .plt          000001e8  00008b40  00008b40  00000b40  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 12 .text         00000c2c  00008d28  00008d28  00000d28  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 13 .fini         00000008  00009954  00009954  00001954  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 14 .rodata       000001d8  0000995c  0000995c  0000195c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
 15 .ARM.exidx    00000008  00009b34  00009b34  00001b34  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
 16 .eh_frame     00000004  00009b3c  00009b3c  00001b3c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
 17 .init_array   00000004  00011b40  00011b40  00001b40  2**2
                  CONTENTS, ALLOC, LOAD, DATA
 18 .fini_array   00000004  00011b44  00011b44  00001b44  2**2
                  CONTENTS, ALLOC, LOAD, DATA
 19 .jcr          00000004  00011b48  00011b48  00001b48  2**2
                  CONTENTS, ALLOC, LOAD, DATA
 20 .dynamic      00000140  00011b4c  00011b4c  00001b4c  2**2
                  CONTENTS, ALLOC, LOAD, DATA
 21 .got          000000ac  00011c8c  00011c8c  00001c8c  2**2
                  CONTENTS, ALLOC, LOAD, DATA
 22 .data         00000008  00011d38  00011d38  00001d38  2**2
                  CONTENTS, ALLOC, LOAD, DATA
 23 .bss          00000008  00011d40  00011d40  00001d40  2**2
                  ALLOC
 24 .comment      00000061  00000000  00000000  00001d40  2**0
                  CONTENTS, READONLY
 25 .ARM.attributes 00000037  00000000  00000000  00001da1  2**0
                  CONTENTS, READONLY
 26 .debug_aranges 00000020  00000000  00000000  00001dd8  2**0
                  CONTENTS, READONLY, DEBUGGING
 27 .debug_info   00001996  00000000  00000000  00001df8  2**0
                  CONTENTS, READONLY, DEBUGGING
 28 .debug_abbrev 0000018b  00000000  00000000  0000378e  2**0
                  CONTENTS, READONLY, DEBUGGING
 29 .debug_line   00000ad6  00000000  00000000  00003919  2**0
                  CONTENTS, READONLY, DEBUGGING
 30 .debug_frame  00000128  00000000  00000000  000043f0  2**2
                  CONTENTS, READONLY, DEBUGGING
 31 .debug_str    00016619  00000000  00000000  00004518  2**0
                  CONTENTS, READONLY, DEBUGGING
 32 .debug_loc    00000152  00000000  00000000  0001ab31  2**0
                  CONTENTS, READONLY, DEBUGGING
 33 .debug_macro  00005d8b  00000000  00000000  0001ac83  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .init:

00008b34 <_init>:
    8b34:	e92d4008 	push	{r3, lr}
    8b38:	eb000088 	bl	8d60 <call_weak_fn>
    8b3c:	e8bd8008 	pop	{r3, pc}

Disassembly of section .plt:

00008b40 <.plt>:
    8b40:	e52de004 	push	{lr}		; (str lr, [sp, #-4]!)
    8b44:	e59fe004 	ldr	lr, [pc, #4]	; 8b50 <_init+0x1c>
    8b48:	e08fe00e 	add	lr, pc, lr
    8b4c:	e5bef008 	ldr	pc, [lr, #8]!
    8b50:	0000913c 	.word	0x0000913c
    8b54:	e28fc600 	add	ip, pc, #0, 12
    8b58:	e28cca09 	add	ip, ip, #36864	; 0x9000
    8b5c:	e5bcf13c 	ldr	pc, [ip, #316]!	; 0x13c
    8b60:	e28fc600 	add	ip, pc, #0, 12
    8b64:	e28cca09 	add	ip, ip, #36864	; 0x9000
    8b68:	e5bcf134 	ldr	pc, [ip, #308]!	; 0x134
    8b6c:	e28fc600 	add	ip, pc, #0, 12
    8b70:	e28cca09 	add	ip, ip, #36864	; 0x9000
    8b74:	e5bcf12c 	ldr	pc, [ip, #300]!	; 0x12c
    8b78:	e28fc600 	add	ip, pc, #0, 12
    8b7c:	e28cca09 	add	ip, ip, #36864	; 0x9000
    8b80:	e5bcf124 	ldr	pc, [ip, #292]!	; 0x124
    8b84:	e28fc600 	add	ip, pc, #0, 12
    8b88:	e28cca09 	add	ip, ip, #36864	; 0x9000
    8b8c:	e5bcf11c 	ldr	pc, [ip, #284]!	; 0x11c
    8b90:	e28fc600 	add	ip, pc, #0, 12
    8b94:	e28cca09 	add	ip, ip, #36864	; 0x9000
    8b98:	e5bcf114 	ldr	pc, [ip, #276]!	; 0x114
    8b9c:	e28fc600 	add	ip, pc, #0, 12
    8ba0:	e28cca09 	add	ip, ip, #36864	; 0x9000
    8ba4:	e5bcf10c 	ldr	pc, [ip, #268]!	; 0x10c
    8ba8:	e28fc600 	add	ip, pc, #0, 12
    8bac:	e28cca09 	add	ip, ip, #36864	; 0x9000
    8bb0:	e5bcf104 	ldr	pc, [ip, #260]!	; 0x104
    8bb4:	e28fc600 	add	ip, pc, #0, 12
    8bb8:	e28cca09 	add	ip, ip, #36864	; 0x9000
    8bbc:	e5bcf0fc 	ldr	pc, [ip, #252]!	; 0xfc
    8bc0:	e28fc600 	add	ip, pc, #0, 12
    8bc4:	e28cca09 	add	ip, ip, #36864	; 0x9000
    8bc8:	e5bcf0f4 	ldr	pc, [ip, #244]!	; 0xf4
    8bcc:	e28fc600 	add	ip, pc, #0, 12
    8bd0:	e28cca09 	add	ip, ip, #36864	; 0x9000
    8bd4:	e5bcf0ec 	ldr	pc, [ip, #236]!	; 0xec
    8bd8:	e28fc600 	add	ip, pc, #0, 12
    8bdc:	e28cca09 	add	ip, ip, #36864	; 0x9000
    8be0:	e5bcf0e4 	ldr	pc, [ip, #228]!	; 0xe4
    8be4:	e28fc600 	add	ip, pc, #0, 12
    8be8:	e28cca09 	add	ip, ip, #36864	; 0x9000
    8bec:	e5bcf0dc 	ldr	pc, [ip, #220]!	; 0xdc
    8bf0:	e28fc600 	add	ip, pc, #0, 12
    8bf4:	e28cca09 	add	ip, ip, #36864	; 0x9000
    8bf8:	e5bcf0d4 	ldr	pc, [ip, #212]!	; 0xd4
    8bfc:	e28fc600 	add	ip, pc, #0, 12
    8c00:	e28cca09 	add	ip, ip, #36864	; 0x9000
    8c04:	e5bcf0cc 	ldr	pc, [ip, #204]!	; 0xcc
    8c08:	e28fc600 	add	ip, pc, #0, 12
    8c0c:	e28cca09 	add	ip, ip, #36864	; 0x9000
    8c10:	e5bcf0c4 	ldr	pc, [ip, #196]!	; 0xc4
    8c14:	e28fc600 	add	ip, pc, #0, 12
    8c18:	e28cca09 	add	ip, ip, #36864	; 0x9000
    8c1c:	e5bcf0bc 	ldr	pc, [ip, #188]!	; 0xbc
    8c20:	e28fc600 	add	ip, pc, #0, 12
    8c24:	e28cca09 	add	ip, ip, #36864	; 0x9000
    8c28:	e5bcf0b4 	ldr	pc, [ip, #180]!	; 0xb4
    8c2c:	e28fc600 	add	ip, pc, #0, 12
    8c30:	e28cca09 	add	ip, ip, #36864	; 0x9000
    8c34:	e5bcf0ac 	ldr	pc, [ip, #172]!	; 0xac
    8c38:	e28fc600 	add	ip, pc, #0, 12
    8c3c:	e28cca09 	add	ip, ip, #36864	; 0x9000
    8c40:	e5bcf0a4 	ldr	pc, [ip, #164]!	; 0xa4
    8c44:	e28fc600 	add	ip, pc, #0, 12
    8c48:	e28cca09 	add	ip, ip, #36864	; 0x9000
    8c4c:	e5bcf09c 	ldr	pc, [ip, #156]!	; 0x9c
    8c50:	e28fc600 	add	ip, pc, #0, 12
    8c54:	e28cca09 	add	ip, ip, #36864	; 0x9000
    8c58:	e5bcf094 	ldr	pc, [ip, #148]!	; 0x94
    8c5c:	e28fc600 	add	ip, pc, #0, 12
    8c60:	e28cca09 	add	ip, ip, #36864	; 0x9000
    8c64:	e5bcf08c 	ldr	pc, [ip, #140]!	; 0x8c
    8c68:	e28fc600 	add	ip, pc, #0, 12
    8c6c:	e28cca09 	add	ip, ip, #36864	; 0x9000
    8c70:	e5bcf084 	ldr	pc, [ip, #132]!	; 0x84
    8c74:	e28fc600 	add	ip, pc, #0, 12
    8c78:	e28cca09 	add	ip, ip, #36864	; 0x9000
    8c7c:	e5bcf07c 	ldr	pc, [ip, #124]!	; 0x7c
    8c80:	e28fc600 	add	ip, pc, #0, 12
    8c84:	e28cca09 	add	ip, ip, #36864	; 0x9000
    8c88:	e5bcf074 	ldr	pc, [ip, #116]!	; 0x74
    8c8c:	e28fc600 	add	ip, pc, #0, 12
    8c90:	e28cca09 	add	ip, ip, #36864	; 0x9000
    8c94:	e5bcf06c 	ldr	pc, [ip, #108]!	; 0x6c
    8c98:	e28fc600 	add	ip, pc, #0, 12
    8c9c:	e28cca09 	add	ip, ip, #36864	; 0x9000
    8ca0:	e5bcf064 	ldr	pc, [ip, #100]!	; 0x64
    8ca4:	e28fc600 	add	ip, pc, #0, 12
    8ca8:	e28cca09 	add	ip, ip, #36864	; 0x9000
    8cac:	e5bcf05c 	ldr	pc, [ip, #92]!	; 0x5c
    8cb0:	e28fc600 	add	ip, pc, #0, 12
    8cb4:	e28cca09 	add	ip, ip, #36864	; 0x9000
    8cb8:	e5bcf054 	ldr	pc, [ip, #84]!	; 0x54
    8cbc:	e28fc600 	add	ip, pc, #0, 12
    8cc0:	e28cca09 	add	ip, ip, #36864	; 0x9000
    8cc4:	e5bcf04c 	ldr	pc, [ip, #76]!	; 0x4c
    8cc8:	e28fc600 	add	ip, pc, #0, 12
    8ccc:	e28cca09 	add	ip, ip, #36864	; 0x9000
    8cd0:	e5bcf044 	ldr	pc, [ip, #68]!	; 0x44
    8cd4:	e28fc600 	add	ip, pc, #0, 12
    8cd8:	e28cca09 	add	ip, ip, #36864	; 0x9000
    8cdc:	e5bcf03c 	ldr	pc, [ip, #60]!	; 0x3c
    8ce0:	e28fc600 	add	ip, pc, #0, 12
    8ce4:	e28cca09 	add	ip, ip, #36864	; 0x9000
    8ce8:	e5bcf034 	ldr	pc, [ip, #52]!	; 0x34
    8cec:	e28fc600 	add	ip, pc, #0, 12
    8cf0:	e28cca09 	add	ip, ip, #36864	; 0x9000
    8cf4:	e5bcf02c 	ldr	pc, [ip, #44]!	; 0x2c
    8cf8:	e28fc600 	add	ip, pc, #0, 12
    8cfc:	e28cca09 	add	ip, ip, #36864	; 0x9000
    8d00:	e5bcf024 	ldr	pc, [ip, #36]!	; 0x24
    8d04:	e28fc600 	add	ip, pc, #0, 12
    8d08:	e28cca09 	add	ip, ip, #36864	; 0x9000
    8d0c:	e5bcf01c 	ldr	pc, [ip, #28]!
    8d10:	e28fc600 	add	ip, pc, #0, 12
    8d14:	e28cca09 	add	ip, ip, #36864	; 0x9000
    8d18:	e5bcf014 	ldr	pc, [ip, #20]!
    8d1c:	e28fc600 	add	ip, pc, #0, 12
    8d20:	e28cca09 	add	ip, ip, #36864	; 0x9000
    8d24:	e5bcf00c 	ldr	pc, [ip, #12]!

Disassembly of section .text:

00008d28 <_start>:
    8d28:	f04f 0b00 	mov.w	fp, #0
    8d2c:	f04f 0e00 	mov.w	lr, #0
    8d30:	f85d 1b04 	ldr.w	r1, [sp], #4
    8d34:	466a      	mov	r2, sp
    8d36:	f84d 2d04 	str.w	r2, [sp, #-4]!
    8d3a:	f84d 0d04 	str.w	r0, [sp, #-4]!
    8d3e:	f8df c014 	ldr.w	ip, [pc, #20]	; 8d54 <_start+0x2c>
    8d42:	f84d cd04 	str.w	ip, [sp, #-4]!
    8d46:	4804      	ldr	r0, [pc, #16]	; (8d58 <_start+0x30>)
    8d48:	4b04      	ldr	r3, [pc, #16]	; (8d5c <_start+0x34>)
    8d4a:	f7ff efdc 	blx	8d04 <_init+0x1d0>
    8d4e:	f7ff ef6e 	blx	8c2c <_init+0xf8>
    8d52:	0000      	.short	0x0000
    8d54:	00009951 	.word	0x00009951
    8d58:	0000930d 	.word	0x0000930d
    8d5c:	00009911 	.word	0x00009911

00008d60 <call_weak_fn>:
    8d60:	e59f3014 	ldr	r3, [pc, #20]	; 8d7c <call_weak_fn+0x1c>
    8d64:	e59f2014 	ldr	r2, [pc, #20]	; 8d80 <call_weak_fn+0x20>
    8d68:	e08f3003 	add	r3, pc, r3
    8d6c:	e7932002 	ldr	r2, [r3, r2]
    8d70:	e3520000 	cmp	r2, #0
    8d74:	012fff1e 	bxeq	lr
    8d78:	eaffffe4 	b	8d10 <_init+0x1dc>
    8d7c:	00008f1c 	.word	0x00008f1c
    8d80:	000000a8 	.word	0x000000a8

00008d84 <deregister_tm_clones>:
    8d84:	b508      	push	{r3, lr}
    8d86:	f641 5040 	movw	r0, #7488	; 0x1d40
    8d8a:	4b07      	ldr	r3, [pc, #28]	; (8da8 <deregister_tm_clones+0x24>)
    8d8c:	f2c0 0001 	movt	r0, #1
    8d90:	1a1b      	subs	r3, r3, r0
    8d92:	2b06      	cmp	r3, #6
    8d94:	d800      	bhi.n	8d98 <deregister_tm_clones+0x14>
    8d96:	bd08      	pop	{r3, pc}
    8d98:	f240 0300 	movw	r3, #0
    8d9c:	f2c0 0300 	movt	r3, #0
    8da0:	2b00      	cmp	r3, #0
    8da2:	d0f8      	beq.n	8d96 <deregister_tm_clones+0x12>
    8da4:	4798      	blx	r3
    8da6:	e7f6      	b.n	8d96 <deregister_tm_clones+0x12>
    8da8:	00011d43 	.word	0x00011d43

00008dac <register_tm_clones>:
    8dac:	b508      	push	{r3, lr}
    8dae:	f641 5040 	movw	r0, #7488	; 0x1d40
    8db2:	f641 5340 	movw	r3, #7488	; 0x1d40
    8db6:	f2c0 0001 	movt	r0, #1
    8dba:	f2c0 0301 	movt	r3, #1
    8dbe:	1a1b      	subs	r3, r3, r0
    8dc0:	109b      	asrs	r3, r3, #2
    8dc2:	eb03 73d3 	add.w	r3, r3, r3, lsr #31
    8dc6:	1059      	asrs	r1, r3, #1
    8dc8:	d100      	bne.n	8dcc <register_tm_clones+0x20>
    8dca:	bd08      	pop	{r3, pc}
    8dcc:	f240 0200 	movw	r2, #0
    8dd0:	f2c0 0200 	movt	r2, #0
    8dd4:	2a00      	cmp	r2, #0
    8dd6:	d0f8      	beq.n	8dca <register_tm_clones+0x1e>
    8dd8:	4790      	blx	r2
    8dda:	e7f6      	b.n	8dca <register_tm_clones+0x1e>

00008ddc <__do_global_dtors_aux>:
    8ddc:	b510      	push	{r4, lr}
    8dde:	f641 5440 	movw	r4, #7488	; 0x1d40
    8de2:	f2c0 0401 	movt	r4, #1
    8de6:	7823      	ldrb	r3, [r4, #0]
    8de8:	b91b      	cbnz	r3, 8df2 <__do_global_dtors_aux+0x16>
    8dea:	f7ff ffcb 	bl	8d84 <deregister_tm_clones>
    8dee:	2301      	movs	r3, #1
    8df0:	7023      	strb	r3, [r4, #0]
    8df2:	bd10      	pop	{r4, pc}

00008df4 <frame_dummy>:
    8df4:	f641 3048 	movw	r0, #6984	; 0x1b48
    8df8:	b508      	push	{r3, lr}
    8dfa:	f2c0 0001 	movt	r0, #1
    8dfe:	6803      	ldr	r3, [r0, #0]
    8e00:	b12b      	cbz	r3, 8e0e <frame_dummy+0x1a>
    8e02:	f240 0300 	movw	r3, #0
    8e06:	f2c0 0300 	movt	r3, #0
    8e0a:	b103      	cbz	r3, 8e0e <frame_dummy+0x1a>
    8e0c:	4798      	blx	r3
    8e0e:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
    8e12:	f7ff bfcb 	b.w	8dac <register_tm_clones>
    8e16:	bf00      	nop

00008e18 <sysfs_gpio_handler>:
 * Syfs gpio handler
 ***************************************************************************
 */

int sysfs_gpio_handler(char str[], char gpio[], char function)
 {
    8e18:	b590      	push	{r4, r7, lr}
    8e1a:	b085      	sub	sp, #20
    8e1c:	af00      	add	r7, sp, #0
    8e1e:	60f8      	str	r0, [r7, #12]
    8e20:	60b9      	str	r1, [r7, #8]
    8e22:	4613      	mov	r3, r2
    8e24:	71fb      	strb	r3, [r7, #7]
  switch (function)
    8e26:	79fb      	ldrb	r3, [r7, #7]
    8e28:	2b03      	cmp	r3, #3
    8e2a:	f200 80d4 	bhi.w	8fd6 <sysfs_gpio_handler+0x1be>
    8e2e:	a201      	add	r2, pc, #4	; (adr r2, 8e34 <sysfs_gpio_handler+0x1c>)
    8e30:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
    8e34:	00008e45 	.word	0x00008e45
    8e38:	00008ea9 	.word	0x00008ea9
    8e3c:	00008f0d 	.word	0x00008f0d
    8e40:	00008f73 	.word	0x00008f73
   {
    /* Open gpio export file descriptor */
    case GPIO_SYSFS_EXPORT:
     gpio_fd = open(str, O_WRONLY);
    8e44:	68f8      	ldr	r0, [r7, #12]
    8e46:	2101      	movs	r1, #1
    8e48:	f7ff ef1a 	blx	8c80 <_init+0x14c>
    8e4c:	4602      	mov	r2, r0
    8e4e:	f641 5344 	movw	r3, #7492	; 0x1d44
    8e52:	f2c0 0301 	movt	r3, #1
    8e56:	601a      	str	r2, [r3, #0]
     if (gpio_fd  < 0)
    8e58:	f641 5344 	movw	r3, #7492	; 0x1d44
    8e5c:	f2c0 0301 	movt	r3, #1
    8e60:	681b      	ldr	r3, [r3, #0]
    8e62:	2b00      	cmp	r3, #0
    8e64:	da08      	bge.n	8e78 <sysfs_gpio_handler+0x60>
      {
       printf("Cannot open GPIO to export it\n");
    8e66:	f649 1060 	movw	r0, #39264	; 0x9960
    8e6a:	f2c0 0000 	movt	r0, #0
    8e6e:	f7ff eeae 	blx	8bcc <_init+0x98>
       return -1;
    8e72:	f04f 33ff 	mov.w	r3, #4294967295
    8e76:	e0af      	b.n	8fd8 <sysfs_gpio_handler+0x1c0>
      }
     /* Write the gpio you want to export and close the export interface. */
     write(gpio_fd , gpio, strlen(gpio)+1);
    8e78:	f641 5344 	movw	r3, #7492	; 0x1d44
    8e7c:	f2c0 0301 	movt	r3, #1
    8e80:	681c      	ldr	r4, [r3, #0]
    8e82:	68b8      	ldr	r0, [r7, #8]
    8e84:	f7ff ef20 	blx	8cc8 <_init+0x194>
    8e88:	4603      	mov	r3, r0
    8e8a:	3301      	adds	r3, #1
    8e8c:	4620      	mov	r0, r4
    8e8e:	68b9      	ldr	r1, [r7, #8]
    8e90:	461a      	mov	r2, r3
    8e92:	f7ff ef26 	blx	8ce0 <_init+0x1ac>
     close(gpio_fd);
    8e96:	f641 5344 	movw	r3, #7492	; 0x1d44
    8e9a:	f2c0 0301 	movt	r3, #1
    8e9e:	681b      	ldr	r3, [r3, #0]
    8ea0:	4618      	mov	r0, r3
    8ea2:	f7ff eeac 	blx	8bfc <_init+0xc8>
    break;
    8ea6:	e096      	b.n	8fd6 <sysfs_gpio_handler+0x1be>

    /* Open gpio direction file descriptor */
    case GPIO_SYSFS_DIRECTION:
     gpio_fd = open(str, O_RDWR);
    8ea8:	68f8      	ldr	r0, [r7, #12]
    8eaa:	2102      	movs	r1, #2
    8eac:	f7ff eee8 	blx	8c80 <_init+0x14c>
    8eb0:	4602      	mov	r2, r0
    8eb2:	f641 5344 	movw	r3, #7492	; 0x1d44
    8eb6:	f2c0 0301 	movt	r3, #1
    8eba:	601a      	str	r2, [r3, #0]
     if (gpio_fd  < 0)
    8ebc:	f641 5344 	movw	r3, #7492	; 0x1d44
    8ec0:	f2c0 0301 	movt	r3, #1
    8ec4:	681b      	ldr	r3, [r3, #0]
    8ec6:	2b00      	cmp	r3, #0
    8ec8:	da08      	bge.n	8edc <sysfs_gpio_handler+0xc4>
      {
       printf("Cannot open GPIO direction\n");
    8eca:	f649 1080 	movw	r0, #39296	; 0x9980
    8ece:	f2c0 0000 	movt	r0, #0
    8ed2:	f7ff ee7c 	blx	8bcc <_init+0x98>
       return -1;
    8ed6:	f04f 33ff 	mov.w	r3, #4294967295
    8eda:	e07d      	b.n	8fd8 <sysfs_gpio_handler+0x1c0>
      }
     /* Write the gpio direction and close the direction interface. */
     write(gpio_fd, gpio, strlen(gpio)+1);
    8edc:	f641 5344 	movw	r3, #7492	; 0x1d44
    8ee0:	f2c0 0301 	movt	r3, #1
    8ee4:	681c      	ldr	r4, [r3, #0]
    8ee6:	68b8      	ldr	r0, [r7, #8]
    8ee8:	f7ff eeee 	blx	8cc8 <_init+0x194>
    8eec:	4603      	mov	r3, r0
    8eee:	3301      	adds	r3, #1
    8ef0:	4620      	mov	r0, r4
    8ef2:	68b9      	ldr	r1, [r7, #8]
    8ef4:	461a      	mov	r2, r3
    8ef6:	f7ff eef4 	blx	8ce0 <_init+0x1ac>
     close(gpio_fd);
    8efa:	f641 5344 	movw	r3, #7492	; 0x1d44
    8efe:	f2c0 0301 	movt	r3, #1
    8f02:	681b      	ldr	r3, [r3, #0]
    8f04:	4618      	mov	r0, r3
    8f06:	f7ff ee7a 	blx	8bfc <_init+0xc8>
    break;
    8f0a:	e064      	b.n	8fd6 <sysfs_gpio_handler+0x1be>

    /* Open gpio value file descriptor */
    case GPIO_SYSFS_VALUE:
     gpio_fd = open(str, O_RDWR);
    8f0c:	68f8      	ldr	r0, [r7, #12]
    8f0e:	2102      	movs	r1, #2
    8f10:	f7ff eeb6 	blx	8c80 <_init+0x14c>
    8f14:	4602      	mov	r2, r0
    8f16:	f641 5344 	movw	r3, #7492	; 0x1d44
    8f1a:	f2c0 0301 	movt	r3, #1
    8f1e:	601a      	str	r2, [r3, #0]
     if (gpio_fd < 0)
    8f20:	f641 5344 	movw	r3, #7492	; 0x1d44
    8f24:	f2c0 0301 	movt	r3, #1
    8f28:	681b      	ldr	r3, [r3, #0]
    8f2a:	2b00      	cmp	r3, #0
    8f2c:	da09      	bge.n	8f42 <sysfs_gpio_handler+0x12a>
      {
       printf("Cannot open GPIO value for %s\n", str);
    8f2e:	f649 109c 	movw	r0, #39324	; 0x999c
    8f32:	f2c0 0000 	movt	r0, #0
    8f36:	68f9      	ldr	r1, [r7, #12]
    8f38:	f7ff ee3c 	blx	8bb4 <_init+0x80>
       return -1;
    8f3c:	f04f 33ff 	mov.w	r3, #4294967295
    8f40:	e04a      	b.n	8fd8 <sysfs_gpio_handler+0x1c0>
      }
     /* Write the gpio vale and close the value interface. */
     write(gpio_fd, gpio, strlen(gpio)+1);
    8f42:	f641 5344 	movw	r3, #7492	; 0x1d44
    8f46:	f2c0 0301 	movt	r3, #1
    8f4a:	681c      	ldr	r4, [r3, #0]
    8f4c:	68b8      	ldr	r0, [r7, #8]
    8f4e:	f7ff eebc 	blx	8cc8 <_init+0x194>
    8f52:	4603      	mov	r3, r0
    8f54:	3301      	adds	r3, #1
    8f56:	4620      	mov	r0, r4
    8f58:	68b9      	ldr	r1, [r7, #8]
    8f5a:	461a      	mov	r2, r3
    8f5c:	f7ff eec0 	blx	8ce0 <_init+0x1ac>
     close(gpio_fd);
    8f60:	f641 5344 	movw	r3, #7492	; 0x1d44
    8f64:	f2c0 0301 	movt	r3, #1
    8f68:	681b      	ldr	r3, [r3, #0]
    8f6a:	4618      	mov	r0, r3
    8f6c:	f7ff ee46 	blx	8bfc <_init+0xc8>
    break;
    8f70:	e031      	b.n	8fd6 <sysfs_gpio_handler+0x1be>

    /* Open gpio unexport file descriptor */
    case GPIO_SYSFS_UNEXPORT:
     gpio_fd = open(str, O_WRONLY);
    8f72:	68f8      	ldr	r0, [r7, #12]
    8f74:	2101      	movs	r1, #1
    8f76:	f7ff ee84 	blx	8c80 <_init+0x14c>
    8f7a:	4602      	mov	r2, r0
    8f7c:	f641 5344 	movw	r3, #7492	; 0x1d44
    8f80:	f2c0 0301 	movt	r3, #1
    8f84:	601a      	str	r2, [r3, #0]
     if (gpio_fd  < 0)
    8f86:	f641 5344 	movw	r3, #7492	; 0x1d44
    8f8a:	f2c0 0301 	movt	r3, #1
    8f8e:	681b      	ldr	r3, [r3, #0]
    8f90:	2b00      	cmp	r3, #0
    8f92:	da08      	bge.n	8fa6 <sysfs_gpio_handler+0x18e>
      {
       printf("Cannot open GPIO to unexport it\n");
    8f94:	f649 10bc 	movw	r0, #39356	; 0x99bc
    8f98:	f2c0 0000 	movt	r0, #0
    8f9c:	f7ff ee16 	blx	8bcc <_init+0x98>
       return -1;
    8fa0:	f04f 33ff 	mov.w	r3, #4294967295
    8fa4:	e018      	b.n	8fd8 <sysfs_gpio_handler+0x1c0>
      }
     /* Write the gpio you want to unexport and close the export interface. */
     write(gpio_fd , gpio, strlen(gpio)+1);
    8fa6:	f641 5344 	movw	r3, #7492	; 0x1d44
    8faa:	f2c0 0301 	movt	r3, #1
    8fae:	681c      	ldr	r4, [r3, #0]
    8fb0:	68b8      	ldr	r0, [r7, #8]
    8fb2:	f7ff ee8a 	blx	8cc8 <_init+0x194>
    8fb6:	4603      	mov	r3, r0
    8fb8:	3301      	adds	r3, #1
    8fba:	4620      	mov	r0, r4
    8fbc:	68b9      	ldr	r1, [r7, #8]
    8fbe:	461a      	mov	r2, r3
    8fc0:	f7ff ee8e 	blx	8ce0 <_init+0x1ac>
     close(gpio_fd);
    8fc4:	f641 5344 	movw	r3, #7492	; 0x1d44
    8fc8:	f2c0 0301 	movt	r3, #1
    8fcc:	681b      	ldr	r3, [r3, #0]
    8fce:	4618      	mov	r0, r3
    8fd0:	f7ff ee14 	blx	8bfc <_init+0xc8>
     break;
    8fd4:	bf00      	nop
   }
  return 0;
    8fd6:	2300      	movs	r3, #0
 }
    8fd8:	4618      	mov	r0, r3
    8fda:	3714      	adds	r7, #20
    8fdc:	46bd      	mov	sp, r7
    8fde:	bd90      	pop	{r4, r7, pc}

00008fe0 <signal_callback_handler>:
 * signal is sent to process
 ***************************************************************************
 */

void signal_callback_handler(int signum)
 {
    8fe0:	b580      	push	{r7, lr}
    8fe2:	b082      	sub	sp, #8
    8fe4:	af00      	add	r7, sp, #0
    8fe6:	6078      	str	r0, [r7, #4]
  printf("\nExit via Ctrl-C\n");
    8fe8:	f649 10dc 	movw	r0, #39388	; 0x99dc
    8fec:	f2c0 0000 	movt	r0, #0
    8ff0:	f7ff edec 	blx	8bcc <_init+0x98>

  /* Turn the LEDs off */
  sysfs_gpio_handler("/sys/class/gpio/gpio67/value", "1", GPIO_SYSFS_VALUE);
    8ff4:	f649 10f0 	movw	r0, #39408	; 0x99f0
    8ff8:	f2c0 0000 	movt	r0, #0
    8ffc:	f649 2110 	movw	r1, #39440	; 0x9a10
    9000:	f2c0 0100 	movt	r1, #0
    9004:	2202      	movs	r2, #2
    9006:	f7ff ff07 	bl	8e18 <sysfs_gpio_handler>
  sysfs_gpio_handler("/sys/class/gpio/gpio68/value", "1", GPIO_SYSFS_VALUE);
    900a:	f649 2014 	movw	r0, #39444	; 0x9a14
    900e:	f2c0 0000 	movt	r0, #0
    9012:	f649 2110 	movw	r1, #39440	; 0x9a10
    9016:	f2c0 0100 	movt	r1, #0
    901a:	2202      	movs	r2, #2
    901c:	f7ff fefc 	bl	8e18 <sysfs_gpio_handler>
  sysfs_gpio_handler("/sys/class/gpio/gpio61/value", "1", GPIO_SYSFS_VALUE);
    9020:	f649 2034 	movw	r0, #39476	; 0x9a34
    9024:	f2c0 0000 	movt	r0, #0
    9028:	f649 2110 	movw	r1, #39440	; 0x9a10
    902c:	f2c0 0100 	movt	r1, #0
    9030:	2202      	movs	r2, #2
    9032:	f7ff fef1 	bl	8e18 <sysfs_gpio_handler>

  /* Terminate program */
  exit(signum);
    9036:	6878      	ldr	r0, [r7, #4]
    9038:	f7ff edb6 	blx	8ba8 <_init+0x74>

0000903c <led1_toggle>:
 * Toggle the LEDs
 ******************************************************************************
 */

static void led1_toggle(s_window_t *window, s_event_t *event, s_handler_t *handler)
 {
    903c:	b590      	push	{r4, r7, lr}
    903e:	b087      	sub	sp, #28
    9040:	af02      	add	r7, sp, #8
    9042:	60f8      	str	r0, [r7, #12]
    9044:	60b9      	str	r1, [r7, #8]
    9046:	607a      	str	r2, [r7, #4]
	static bool on = 0;
  /* toggle the LED-1 */
	if(on == true)
    9048:	f641 5341 	movw	r3, #7489	; 0x1d41
    904c:	f2c0 0301 	movt	r3, #1
    9050:	781b      	ldrb	r3, [r3, #0]
    9052:	2b00      	cmp	r3, #0
    9054:	d00b      	beq.n	906e <led1_toggle+0x32>
		sysfs_gpio_handler("/sys/class/gpio/gpio67/value", "0", GPIO_SYSFS_VALUE);
    9056:	f649 10f0 	movw	r0, #39408	; 0x99f0
    905a:	f2c0 0000 	movt	r0, #0
    905e:	f649 2154 	movw	r1, #39508	; 0x9a54
    9062:	f2c0 0100 	movt	r1, #0
    9066:	2202      	movs	r2, #2
    9068:	f7ff fed6 	bl	8e18 <sysfs_gpio_handler>
    906c:	e00a      	b.n	9084 <led1_toggle+0x48>
	else
		sysfs_gpio_handler("/sys/class/gpio/gpio67/value", "1", GPIO_SYSFS_VALUE);
    906e:	f649 10f0 	movw	r0, #39408	; 0x99f0
    9072:	f2c0 0000 	movt	r0, #0
    9076:	f649 2110 	movw	r1, #39440	; 0x9a10
    907a:	f2c0 0100 	movt	r1, #0
    907e:	2202      	movs	r2, #2
    9080:	f7ff feca 	bl	8e18 <sysfs_gpio_handler>
	on = !on;
    9084:	f641 5341 	movw	r3, #7489	; 0x1d41
    9088:	f2c0 0301 	movt	r3, #1
    908c:	781b      	ldrb	r3, [r3, #0]
    908e:	2b00      	cmp	r3, #0
    9090:	bf0c      	ite	eq
    9092:	2300      	moveq	r3, #0
    9094:	2301      	movne	r3, #1
    9096:	b2db      	uxtb	r3, r3
    9098:	f083 0301 	eor.w	r3, r3, #1
    909c:	b2db      	uxtb	r3, r3
    909e:	f003 0301 	and.w	r3, r3, #1
    90a2:	b2da      	uxtb	r2, r3
    90a4:	f641 5341 	movw	r3, #7489	; 0x1d41
    90a8:	f2c0 0301 	movt	r3, #1
    90ac:	701a      	strb	r2, [r3, #0]

  s_fillbox(window->surface, 158, 200, 70, 70, s_rgbcolor(window->surface, 255, 255, 255));
    90ae:	68fb      	ldr	r3, [r7, #12]
    90b0:	6b5c      	ldr	r4, [r3, #52]	; 0x34
    90b2:	68fb      	ldr	r3, [r7, #12]
    90b4:	6b5b      	ldr	r3, [r3, #52]	; 0x34
    90b6:	4618      	mov	r0, r3
    90b8:	21ff      	movs	r1, #255	; 0xff
    90ba:	22ff      	movs	r2, #255	; 0xff
    90bc:	23ff      	movs	r3, #255	; 0xff
    90be:	f7ff ee16 	blx	8cec <_init+0x1b8>
    90c2:	4603      	mov	r3, r0
    90c4:	2246      	movs	r2, #70	; 0x46
    90c6:	9200      	str	r2, [sp, #0]
    90c8:	9301      	str	r3, [sp, #4]
    90ca:	4620      	mov	r0, r4
    90cc:	219e      	movs	r1, #158	; 0x9e
    90ce:	22c8      	movs	r2, #200	; 0xc8
    90d0:	2346      	movs	r3, #70	; 0x46
    90d2:	f7ff ee12 	blx	8cf8 <_init+0x1c4>
  s_fillbox(window->surface, 162, 204, 62, 62, s_rgbcolor(window->surface, 30, 255, 30));
    90d6:	68fb      	ldr	r3, [r7, #12]
    90d8:	6b5c      	ldr	r4, [r3, #52]	; 0x34
    90da:	68fb      	ldr	r3, [r7, #12]
    90dc:	6b5b      	ldr	r3, [r3, #52]	; 0x34
    90de:	4618      	mov	r0, r3
    90e0:	211e      	movs	r1, #30
    90e2:	22ff      	movs	r2, #255	; 0xff
    90e4:	231e      	movs	r3, #30
    90e6:	f7ff ee02 	blx	8cec <_init+0x1b8>
    90ea:	4603      	mov	r3, r0
    90ec:	223e      	movs	r2, #62	; 0x3e
    90ee:	9200      	str	r2, [sp, #0]
    90f0:	9301      	str	r3, [sp, #4]
    90f2:	4620      	mov	r0, r4
    90f4:	21a2      	movs	r1, #162	; 0xa2
    90f6:	22cc      	movs	r2, #204	; 0xcc
    90f8:	233e      	movs	r3, #62	; 0x3e
    90fa:	f7ff edfe 	blx	8cf8 <_init+0x1c4>
  usleep(40000);
    90fe:	f649 4040 	movw	r0, #40000	; 0x9c40
    9102:	f7ff ede8 	blx	8cd4 <_init+0x1a0>

  s_fillbox(window->surface, 158, 200, 70, 70, s_rgbcolor(window->surface, 0, 0, 0));
    9106:	68fb      	ldr	r3, [r7, #12]
    9108:	6b5c      	ldr	r4, [r3, #52]	; 0x34
    910a:	68fb      	ldr	r3, [r7, #12]
    910c:	6b5b      	ldr	r3, [r3, #52]	; 0x34
    910e:	4618      	mov	r0, r3
    9110:	2100      	movs	r1, #0
    9112:	2200      	movs	r2, #0
    9114:	2300      	movs	r3, #0
    9116:	f7ff edea 	blx	8cec <_init+0x1b8>
    911a:	4603      	mov	r3, r0
    911c:	2246      	movs	r2, #70	; 0x46
    911e:	9200      	str	r2, [sp, #0]
    9120:	9301      	str	r3, [sp, #4]
    9122:	4620      	mov	r0, r4
    9124:	219e      	movs	r1, #158	; 0x9e
    9126:	22c8      	movs	r2, #200	; 0xc8
    9128:	2346      	movs	r3, #70	; 0x46
    912a:	f7ff ede6 	blx	8cf8 <_init+0x1c4>
  s_fillbox(window->surface, 162, 204, 62, 62, s_rgbcolor(window->surface, 30, 255, 30));
    912e:	68fb      	ldr	r3, [r7, #12]
    9130:	6b5c      	ldr	r4, [r3, #52]	; 0x34
    9132:	68fb      	ldr	r3, [r7, #12]
    9134:	6b5b      	ldr	r3, [r3, #52]	; 0x34
    9136:	4618      	mov	r0, r3
    9138:	211e      	movs	r1, #30
    913a:	22ff      	movs	r2, #255	; 0xff
    913c:	231e      	movs	r3, #30
    913e:	f7ff edd6 	blx	8cec <_init+0x1b8>
    9142:	4603      	mov	r3, r0
    9144:	223e      	movs	r2, #62	; 0x3e
    9146:	9200      	str	r2, [sp, #0]
    9148:	9301      	str	r3, [sp, #4]
    914a:	4620      	mov	r0, r4
    914c:	21a2      	movs	r1, #162	; 0xa2
    914e:	22cc      	movs	r2, #204	; 0xcc
    9150:	233e      	movs	r3, #62	; 0x3e
    9152:	f7ff edd2 	blx	8cf8 <_init+0x1c4>
  usleep(40000);
    9156:	f649 4040 	movw	r0, #40000	; 0x9c40
    915a:	f7ff edbc 	blx	8cd4 <_init+0x1a0>
 }
    915e:	3714      	adds	r7, #20
    9160:	46bd      	mov	sp, r7
    9162:	bd90      	pop	{r4, r7, pc}

00009164 <led2_toggle>:

static void led2_toggle(s_window_t *window, s_event_t *event, s_handler_t *handler)
 {
    9164:	b590      	push	{r4, r7, lr}
    9166:	b087      	sub	sp, #28
    9168:	af02      	add	r7, sp, #8
    916a:	60f8      	str	r0, [r7, #12]
    916c:	60b9      	str	r1, [r7, #8]
    916e:	607a      	str	r2, [r7, #4]
	static bool on = 0;
  /* toggle the LED-2 */
	if(on == true)
    9170:	f641 5342 	movw	r3, #7490	; 0x1d42
    9174:	f2c0 0301 	movt	r3, #1
    9178:	781b      	ldrb	r3, [r3, #0]
    917a:	2b00      	cmp	r3, #0
    917c:	d00b      	beq.n	9196 <led2_toggle+0x32>
		sysfs_gpio_handler("/sys/class/gpio/gpio68/value", "0", GPIO_SYSFS_VALUE);
    917e:	f649 2014 	movw	r0, #39444	; 0x9a14
    9182:	f2c0 0000 	movt	r0, #0
    9186:	f649 2154 	movw	r1, #39508	; 0x9a54
    918a:	f2c0 0100 	movt	r1, #0
    918e:	2202      	movs	r2, #2
    9190:	f7ff fe42 	bl	8e18 <sysfs_gpio_handler>
    9194:	e00a      	b.n	91ac <led2_toggle+0x48>
	else
		sysfs_gpio_handler("/sys/class/gpio/gpio68/value", "1", GPIO_SYSFS_VALUE);
    9196:	f649 2014 	movw	r0, #39444	; 0x9a14
    919a:	f2c0 0000 	movt	r0, #0
    919e:	f649 2110 	movw	r1, #39440	; 0x9a10
    91a2:	f2c0 0100 	movt	r1, #0
    91a6:	2202      	movs	r2, #2
    91a8:	f7ff fe36 	bl	8e18 <sysfs_gpio_handler>
	on = !on;
    91ac:	f641 5342 	movw	r3, #7490	; 0x1d42
    91b0:	f2c0 0301 	movt	r3, #1
    91b4:	781b      	ldrb	r3, [r3, #0]
    91b6:	2b00      	cmp	r3, #0
    91b8:	bf0c      	ite	eq
    91ba:	2300      	moveq	r3, #0
    91bc:	2301      	movne	r3, #1
    91be:	b2db      	uxtb	r3, r3
    91c0:	f083 0301 	eor.w	r3, r3, #1
    91c4:	b2db      	uxtb	r3, r3
    91c6:	f003 0301 	and.w	r3, r3, #1
    91ca:	b2da      	uxtb	r2, r3
    91cc:	f641 5342 	movw	r3, #7490	; 0x1d42
    91d0:	f2c0 0301 	movt	r3, #1
    91d4:	701a      	strb	r2, [r3, #0]

  s_fillbox(window->surface, 380, 200, 70, 70, s_rgbcolor(window->surface, 255, 255, 255));
    91d6:	68fb      	ldr	r3, [r7, #12]
    91d8:	6b5c      	ldr	r4, [r3, #52]	; 0x34
    91da:	68fb      	ldr	r3, [r7, #12]
    91dc:	6b5b      	ldr	r3, [r3, #52]	; 0x34
    91de:	4618      	mov	r0, r3
    91e0:	21ff      	movs	r1, #255	; 0xff
    91e2:	22ff      	movs	r2, #255	; 0xff
    91e4:	23ff      	movs	r3, #255	; 0xff
    91e6:	f7ff ed82 	blx	8cec <_init+0x1b8>
    91ea:	4603      	mov	r3, r0
    91ec:	2246      	movs	r2, #70	; 0x46
    91ee:	9200      	str	r2, [sp, #0]
    91f0:	9301      	str	r3, [sp, #4]
    91f2:	4620      	mov	r0, r4
    91f4:	f44f 71be 	mov.w	r1, #380	; 0x17c
    91f8:	22c8      	movs	r2, #200	; 0xc8
    91fa:	2346      	movs	r3, #70	; 0x46
    91fc:	f7ff ed7c 	blx	8cf8 <_init+0x1c4>
  s_fillbox(window->surface, 384, 204, 62, 62, s_rgbcolor(window->surface, 30, 255, 30));
    9200:	68fb      	ldr	r3, [r7, #12]
    9202:	6b5c      	ldr	r4, [r3, #52]	; 0x34
    9204:	68fb      	ldr	r3, [r7, #12]
    9206:	6b5b      	ldr	r3, [r3, #52]	; 0x34
    9208:	4618      	mov	r0, r3
    920a:	211e      	movs	r1, #30
    920c:	22ff      	movs	r2, #255	; 0xff
    920e:	231e      	movs	r3, #30
    9210:	f7ff ed6c 	blx	8cec <_init+0x1b8>
    9214:	4603      	mov	r3, r0
    9216:	223e      	movs	r2, #62	; 0x3e
    9218:	9200      	str	r2, [sp, #0]
    921a:	9301      	str	r3, [sp, #4]
    921c:	4620      	mov	r0, r4
    921e:	f44f 71c0 	mov.w	r1, #384	; 0x180
    9222:	22cc      	movs	r2, #204	; 0xcc
    9224:	233e      	movs	r3, #62	; 0x3e
    9226:	f7ff ed68 	blx	8cf8 <_init+0x1c4>
  usleep(40000);
    922a:	f649 4040 	movw	r0, #40000	; 0x9c40
    922e:	f7ff ed52 	blx	8cd4 <_init+0x1a0>

  s_fillbox(window->surface, 380, 200, 70, 70, s_rgbcolor(window->surface, 0, 0, 0));
    9232:	68fb      	ldr	r3, [r7, #12]
    9234:	6b5c      	ldr	r4, [r3, #52]	; 0x34
    9236:	68fb      	ldr	r3, [r7, #12]
    9238:	6b5b      	ldr	r3, [r3, #52]	; 0x34
    923a:	4618      	mov	r0, r3
    923c:	2100      	movs	r1, #0
    923e:	2200      	movs	r2, #0
    9240:	2300      	movs	r3, #0
    9242:	f7ff ed54 	blx	8cec <_init+0x1b8>
    9246:	4603      	mov	r3, r0
    9248:	2246      	movs	r2, #70	; 0x46
    924a:	9200      	str	r2, [sp, #0]
    924c:	9301      	str	r3, [sp, #4]
    924e:	4620      	mov	r0, r4
    9250:	f44f 71be 	mov.w	r1, #380	; 0x17c
    9254:	22c8      	movs	r2, #200	; 0xc8
    9256:	2346      	movs	r3, #70	; 0x46
    9258:	f7ff ed4e 	blx	8cf8 <_init+0x1c4>
  s_fillbox(window->surface, 384, 204, 62, 62, s_rgbcolor(window->surface, 30, 255, 30));
    925c:	68fb      	ldr	r3, [r7, #12]
    925e:	6b5c      	ldr	r4, [r3, #52]	; 0x34
    9260:	68fb      	ldr	r3, [r7, #12]
    9262:	6b5b      	ldr	r3, [r3, #52]	; 0x34
    9264:	4618      	mov	r0, r3
    9266:	211e      	movs	r1, #30
    9268:	22ff      	movs	r2, #255	; 0xff
    926a:	231e      	movs	r3, #30
    926c:	f7ff ed3e 	blx	8cec <_init+0x1b8>
    9270:	4603      	mov	r3, r0
    9272:	223e      	movs	r2, #62	; 0x3e
    9274:	9200      	str	r2, [sp, #0]
    9276:	9301      	str	r3, [sp, #4]
    9278:	4620      	mov	r0, r4
    927a:	f44f 71c0 	mov.w	r1, #384	; 0x180
    927e:	22cc      	movs	r2, #204	; 0xcc
    9280:	233e      	movs	r3, #62	; 0x3e
    9282:	f7ff ed3a 	blx	8cf8 <_init+0x1c4>
  usleep(40000);
    9286:	f649 4040 	movw	r0, #40000	; 0x9c40
    928a:	f7ff ed24 	blx	8cd4 <_init+0x1a0>
 }
    928e:	3714      	adds	r7, #20
    9290:	46bd      	mov	sp, r7
    9292:	bd90      	pop	{r4, r7, pc}

00009294 <timer0_handler>:
 * Handler for timer0
 ******************************************************************************
 */

static void timer0_handler(s_window_t *window, s_timer_t *timer)
 {
    9294:	b580      	push	{r7, lr}
    9296:	b082      	sub	sp, #8
    9298:	af00      	add	r7, sp, #0
    929a:	6078      	str	r0, [r7, #4]
    929c:	6039      	str	r1, [r7, #0]
  static bool toggleFlag = 0;

  if (toggleFlag == true)
    929e:	f641 5343 	movw	r3, #7491	; 0x1d43
    92a2:	f2c0 0301 	movt	r3, #1
    92a6:	781b      	ldrb	r3, [r3, #0]
    92a8:	2b00      	cmp	r3, #0
    92aa:	d00b      	beq.n	92c4 <timer0_handler+0x30>
   /* Turn the LED-4 on */
   sysfs_gpio_handler("/sys/class/gpio/gpio61/value", "0", GPIO_SYSFS_VALUE);
    92ac:	f649 2034 	movw	r0, #39476	; 0x9a34
    92b0:	f2c0 0000 	movt	r0, #0
    92b4:	f649 2154 	movw	r1, #39508	; 0x9a54
    92b8:	f2c0 0100 	movt	r1, #0
    92bc:	2202      	movs	r2, #2
    92be:	f7ff fdab 	bl	8e18 <sysfs_gpio_handler>
    92c2:	e00a      	b.n	92da <timer0_handler+0x46>
  else
   /* Turn the LED-4 off */
   sysfs_gpio_handler("/sys/class/gpio/gpio61/value", "1", GPIO_SYSFS_VALUE);
    92c4:	f649 2034 	movw	r0, #39476	; 0x9a34
    92c8:	f2c0 0000 	movt	r0, #0
    92cc:	f649 2110 	movw	r1, #39440	; 0x9a10
    92d0:	f2c0 0100 	movt	r1, #0
    92d4:	2202      	movs	r2, #2
    92d6:	f7ff fd9f 	bl	8e18 <sysfs_gpio_handler>
 toggleFlag = !toggleFlag;
    92da:	f641 5343 	movw	r3, #7491	; 0x1d43
    92de:	f2c0 0301 	movt	r3, #1
    92e2:	781b      	ldrb	r3, [r3, #0]
    92e4:	2b00      	cmp	r3, #0
    92e6:	bf0c      	ite	eq
    92e8:	2300      	moveq	r3, #0
    92ea:	2301      	movne	r3, #1
    92ec:	b2db      	uxtb	r3, r3
    92ee:	f083 0301 	eor.w	r3, r3, #1
    92f2:	b2db      	uxtb	r3, r3
    92f4:	f003 0301 	and.w	r3, r3, #1
    92f8:	b2da      	uxtb	r2, r3
    92fa:	f641 5343 	movw	r3, #7491	; 0x1d43
    92fe:	f2c0 0301 	movt	r3, #1
    9302:	701a      	strb	r2, [r3, #0]
 }
    9304:	3708      	adds	r7, #8
    9306:	46bd      	mov	sp, r7
    9308:	bd80      	pop	{r7, pc}
    930a:	bf00      	nop

0000930c <main>:
 * main
 ******************************************************************************
 */

int main (int argc, char *argv[])
 {
    930c:	b5b0      	push	{r4, r5, r7, lr}
    930e:	b090      	sub	sp, #64	; 0x40
    9310:	af02      	add	r7, sp, #8
    9312:	6078      	str	r0, [r7, #4]
    9314:	6039      	str	r1, [r7, #0]
  s_handler_t *hndl;
  s_window_t *window;
  s_timer_t *timer;
  s_image_t *img1;
  s_image_t *img2;
  char *file1 = "tux_80x96.png";
    9316:	f649 2358 	movw	r3, #39512	; 0x9a58
    931a:	f2c0 0300 	movt	r3, #0
    931e:	633b      	str	r3, [r7, #48]	; 0x30
  char *file2 = "xkcd.png";
    9320:	f649 2368 	movw	r3, #39528	; 0x9a68
    9324:	f2c0 0300 	movt	r3, #0
    9328:	62fb      	str	r3, [r7, #44]	; 0x2c

  /* Register signal and signal handler */
  signal(SIGINT, signal_callback_handler);
    932a:	2002      	movs	r0, #2
    932c:	f648 71e1 	movw	r1, #36833	; 0x8fe1
    9330:	f2c0 0100 	movt	r1, #0
    9334:	f7ff ec0e 	blx	8b54 <_init+0x20>

  /* Setup gpio sysfs for LED1 */
  sysfs_gpio_handler("/sys/class/gpio/export", "67", GPIO_SYSFS_EXPORT);
    9338:	f649 2074 	movw	r0, #39540	; 0x9a74
    933c:	f2c0 0000 	movt	r0, #0
    9340:	f649 218c 	movw	r1, #39564	; 0x9a8c
    9344:	f2c0 0100 	movt	r1, #0
    9348:	2200      	movs	r2, #0
    934a:	f7ff fd65 	bl	8e18 <sysfs_gpio_handler>
  sysfs_gpio_handler("/sys/class/gpio/gpio67/direction", "out", GPIO_SYSFS_DIRECTION);
    934e:	f649 2090 	movw	r0, #39568	; 0x9a90
    9352:	f2c0 0000 	movt	r0, #0
    9356:	f649 21b4 	movw	r1, #39604	; 0x9ab4
    935a:	f2c0 0100 	movt	r1, #0
    935e:	2201      	movs	r2, #1
    9360:	f7ff fd5a 	bl	8e18 <sysfs_gpio_handler>
  sysfs_gpio_handler("/sys/class/gpio/gpio67/value", "1", GPIO_SYSFS_VALUE);
    9364:	f649 10f0 	movw	r0, #39408	; 0x99f0
    9368:	f2c0 0000 	movt	r0, #0
    936c:	f649 2110 	movw	r1, #39440	; 0x9a10
    9370:	f2c0 0100 	movt	r1, #0
    9374:	2202      	movs	r2, #2
    9376:	f7ff fd4f 	bl	8e18 <sysfs_gpio_handler>

  /* Setup gpio sysfs for LED2 */
  sysfs_gpio_handler("/sys/class/gpio/export", "68", GPIO_SYSFS_EXPORT);
    937a:	f649 2074 	movw	r0, #39540	; 0x9a74
    937e:	f2c0 0000 	movt	r0, #0
    9382:	f649 21b8 	movw	r1, #39608	; 0x9ab8
    9386:	f2c0 0100 	movt	r1, #0
    938a:	2200      	movs	r2, #0
    938c:	f7ff fd44 	bl	8e18 <sysfs_gpio_handler>
  sysfs_gpio_handler("/sys/class/gpio/gpio68/direction", "out", GPIO_SYSFS_DIRECTION);
    9390:	f649 20bc 	movw	r0, #39612	; 0x9abc
    9394:	f2c0 0000 	movt	r0, #0
    9398:	f649 21b4 	movw	r1, #39604	; 0x9ab4
    939c:	f2c0 0100 	movt	r1, #0
    93a0:	2201      	movs	r2, #1
    93a2:	f7ff fd39 	bl	8e18 <sysfs_gpio_handler>
  sysfs_gpio_handler("/sys/class/gpio/gpio68/value", "1", GPIO_SYSFS_VALUE);
    93a6:	f649 2014 	movw	r0, #39444	; 0x9a14
    93aa:	f2c0 0000 	movt	r0, #0
    93ae:	f649 2110 	movw	r1, #39440	; 0x9a10
    93b2:	f2c0 0100 	movt	r1, #0
    93b6:	2202      	movs	r2, #2
    93b8:	f7ff fd2e 	bl	8e18 <sysfs_gpio_handler>

  /* Setup gpio sysfs for LED4 */
  sysfs_gpio_handler("/sys/class/gpio/export", "61", GPIO_SYSFS_EXPORT);
    93bc:	f649 2074 	movw	r0, #39540	; 0x9a74
    93c0:	f2c0 0000 	movt	r0, #0
    93c4:	f649 21e0 	movw	r1, #39648	; 0x9ae0
    93c8:	f2c0 0100 	movt	r1, #0
    93cc:	2200      	movs	r2, #0
    93ce:	f7ff fd23 	bl	8e18 <sysfs_gpio_handler>
  sysfs_gpio_handler("/sys/class/gpio/gpio61/direction", "out", GPIO_SYSFS_DIRECTION);
    93d2:	f649 20e4 	movw	r0, #39652	; 0x9ae4
    93d6:	f2c0 0000 	movt	r0, #0
    93da:	f649 21b4 	movw	r1, #39604	; 0x9ab4
    93de:	f2c0 0100 	movt	r1, #0
    93e2:	2201      	movs	r2, #1
    93e4:	f7ff fd18 	bl	8e18 <sysfs_gpio_handler>
  sysfs_gpio_handler("/sys/class/gpio/gpio61/value", "1", GPIO_SYSFS_VALUE);
    93e8:	f649 2034 	movw	r0, #39476	; 0x9a34
    93ec:	f2c0 0000 	movt	r0, #0
    93f0:	f649 2110 	movw	r1, #39440	; 0x9a10
    93f4:	f2c0 0100 	movt	r1, #0
    93f8:	2202      	movs	r2, #2
    93fa:	f7ff fd0d 	bl	8e18 <sysfs_gpio_handler>

  /* Init window and create it	*/
  s_window_init(&window);
    93fe:	f107 0314 	add.w	r3, r7, #20
    9402:	4618      	mov	r0, r3
    9404:	f7ff ec2a 	blx	8c5c <_init+0x128>
  s_window_new(window, WINDOW_TYPE_MAIN | WINDOW_TYPE_NOFORM | WINDOW_TYPE_DESKTOP, NULL);
    9408:	697b      	ldr	r3, [r7, #20]
    940a:	4618      	mov	r0, r3
    940c:	f44f 610c 	mov.w	r1, #2240	; 0x8c0
    9410:	2200      	movs	r2, #0
    9412:	f7ff ebd6 	blx	8bc0 <_init+0x8c>
  s_window_set_cursor(window, CURSOR_TYPE_NONE);
    9416:	697b      	ldr	r3, [r7, #20]
    9418:	4618      	mov	r0, r3
    941a:	210e      	movs	r1, #14
    941c:	f7ff ec00 	blx	8c20 <_init+0xec>
  s_window_set_resizeable(window, 0);
    9420:	697b      	ldr	r3, [r7, #20]
    9422:	4618      	mov	r0, r3
    9424:	2100      	movs	r1, #0
    9426:	f7ff ebf0 	blx	8c08 <_init+0xd4>
  s_window_set_alwaysontop(window, 1);
    942a:	697b      	ldr	r3, [r7, #20]
    942c:	4618      	mov	r0, r3
    942e:	2101      	movs	r1, #1
    9430:	f7ff eb96 	blx	8b60 <_init+0x2c>

  /* Set width and height */
  w = 600;
    9434:	f44f 7316 	mov.w	r3, #600	; 0x258
    9438:	62bb      	str	r3, [r7, #40]	; 0x28
  h = 400;
    943a:	f44f 73c8 	mov.w	r3, #400	; 0x190
    943e:	627b      	str	r3, [r7, #36]	; 0x24
  x = (window->surface->width - w) / 2;
    9440:	697b      	ldr	r3, [r7, #20]
    9442:	6b5b      	ldr	r3, [r3, #52]	; 0x34
    9444:	6b5a      	ldr	r2, [r3, #52]	; 0x34
    9446:	6abb      	ldr	r3, [r7, #40]	; 0x28
    9448:	1ad3      	subs	r3, r2, r3
    944a:	0fda      	lsrs	r2, r3, #31
    944c:	4413      	add	r3, r2
    944e:	105b      	asrs	r3, r3, #1
    9450:	623b      	str	r3, [r7, #32]
  y = (window->surface->height - h) / 2;
    9452:	697b      	ldr	r3, [r7, #20]
    9454:	6b5b      	ldr	r3, [r3, #52]	; 0x34
    9456:	6b9a      	ldr	r2, [r3, #56]	; 0x38
    9458:	6a7b      	ldr	r3, [r7, #36]	; 0x24
    945a:	1ad3      	subs	r3, r2, r3
    945c:	0fda      	lsrs	r2, r3, #31
    945e:	4413      	add	r3, r2
    9460:	105b      	asrs	r3, r3, #1
    9462:	637b      	str	r3, [r7, #52]	; 0x34
  s_window_set_coor(window, WINDOW_TYPE_NOFORM, x, y, w, h);
    9464:	697b      	ldr	r3, [r7, #20]
    9466:	6aba      	ldr	r2, [r7, #40]	; 0x28
    9468:	9200      	str	r2, [sp, #0]
    946a:	6a7a      	ldr	r2, [r7, #36]	; 0x24
    946c:	9201      	str	r2, [sp, #4]
    946e:	4618      	mov	r0, r3
    9470:	2140      	movs	r1, #64	; 0x40
    9472:	6a3a      	ldr	r2, [r7, #32]
    9474:	6b7b      	ldr	r3, [r7, #52]	; 0x34
    9476:	f7ff ebf8 	blx	8c68 <_init+0x134>
  s_free(window->surface->vbuf);
    947a:	697b      	ldr	r3, [r7, #20]
    947c:	6b5b      	ldr	r3, [r3, #52]	; 0x34
    947e:	6c5b      	ldr	r3, [r3, #68]	; 0x44
    9480:	4618      	mov	r0, r3
    9482:	f7ff eb7a 	blx	8b78 <_init+0x44>
  window->surface->width = w;
    9486:	697b      	ldr	r3, [r7, #20]
    9488:	6b5b      	ldr	r3, [r3, #52]	; 0x34
    948a:	6aba      	ldr	r2, [r7, #40]	; 0x28
    948c:	635a      	str	r2, [r3, #52]	; 0x34
  window->surface->height = h;
    948e:	697b      	ldr	r3, [r7, #20]
    9490:	6b5b      	ldr	r3, [r3, #52]	; 0x34
    9492:	6a7a      	ldr	r2, [r7, #36]	; 0x24
    9494:	639a      	str	r2, [r3, #56]	; 0x38
  window->surface->vbuf = (unsigned char *) malloc(w * h * window->surface->bytesperpixel);
    9496:	697b      	ldr	r3, [r7, #20]
    9498:	6b5c      	ldr	r4, [r3, #52]	; 0x34
    949a:	6abb      	ldr	r3, [r7, #40]	; 0x28
    949c:	6a7a      	ldr	r2, [r7, #36]	; 0x24
    949e:	fb02 f303 	mul.w	r3, r2, r3
    94a2:	697a      	ldr	r2, [r7, #20]
    94a4:	6b52      	ldr	r2, [r2, #52]	; 0x34
    94a6:	6852      	ldr	r2, [r2, #4]
    94a8:	fb02 f303 	mul.w	r3, r2, r3
    94ac:	4618      	mov	r0, r3
    94ae:	f7ff ec06 	blx	8cbc <_init+0x188>
    94b2:	4603      	mov	r3, r0
    94b4:	6463      	str	r3, [r4, #68]	; 0x44

  /* Draw window with a gradient color */
  s_fillbox(window->surface, 0, 0, w, h, s_rgbcolor(window->surface, 0, 0, 0));
    94b6:	697b      	ldr	r3, [r7, #20]
    94b8:	6b5c      	ldr	r4, [r3, #52]	; 0x34
    94ba:	697b      	ldr	r3, [r7, #20]
    94bc:	6b5b      	ldr	r3, [r3, #52]	; 0x34
    94be:	4618      	mov	r0, r3
    94c0:	2100      	movs	r1, #0
    94c2:	2200      	movs	r2, #0
    94c4:	2300      	movs	r3, #0
    94c6:	f7ff ec12 	blx	8cec <_init+0x1b8>
    94ca:	4603      	mov	r3, r0
    94cc:	6a7a      	ldr	r2, [r7, #36]	; 0x24
    94ce:	9200      	str	r2, [sp, #0]
    94d0:	9301      	str	r3, [sp, #4]
    94d2:	4620      	mov	r0, r4
    94d4:	2100      	movs	r1, #0
    94d6:	2200      	movs	r2, #0
    94d8:	6abb      	ldr	r3, [r7, #40]	; 0x28
    94da:	f7ff ec0e 	blx	8cf8 <_init+0x1c4>
  for (y=2; y<h-2; y++)
    94de:	2302      	movs	r3, #2
    94e0:	637b      	str	r3, [r7, #52]	; 0x34
    94e2:	e04d      	b.n	9580 <main+0x274>
   {
    s_fillbox(window->surface, 2, y, w - 4, 1, s_rgbcolor(window->surface, 255 - (int) ((float) y * 255.00 / 400.00),
    94e4:	697b      	ldr	r3, [r7, #20]
    94e6:	6b5d      	ldr	r5, [r3, #52]	; 0x34
    94e8:	6abb      	ldr	r3, [r7, #40]	; 0x28
    94ea:	1f1c      	subs	r4, r3, #4
    94ec:	697b      	ldr	r3, [r7, #20]
    94ee:	6b59      	ldr	r1, [r3, #52]	; 0x34
    94f0:	6b7b      	ldr	r3, [r7, #52]	; 0x34
    94f2:	ee06 3a90 	vmov	s13, r3
    94f6:	eef8 7ae6 	vcvt.f32.s32	s15, s13
    94fa:	eeb7 6ae7 	vcvt.f64.f32	d6, s15
    94fe:	ed9f 7b1c 	vldr	d7, [pc, #112]	; 9570 <main+0x264>
    9502:	ee26 6b07 	vmul.f64	d6, d6, d7
    9506:	ed9f 7b1c 	vldr	d7, [pc, #112]	; 9578 <main+0x26c>
    950a:	ee86 7b07 	vdiv.f64	d7, d6, d7
    950e:	eefd 6bc7 	vcvt.s32.f64	s13, d7
    9512:	ee16 3a90 	vmov	r3, s13
    9516:	f1c3 02ff 	rsb	r2, r3, #255	; 0xff
                                                                           255 - (int) ((float) y * 255.00 / 400.00),
    951a:	6b7b      	ldr	r3, [r7, #52]	; 0x34
    951c:	ee07 3a10 	vmov	s14, r3
    9520:	eef8 7ac7 	vcvt.f32.s32	s15, s14
    9524:	eeb7 6ae7 	vcvt.f64.f32	d6, s15
    9528:	ed9f 7b11 	vldr	d7, [pc, #68]	; 9570 <main+0x264>
    952c:	ee26 6b07 	vmul.f64	d6, d6, d7
    9530:	ed9f 7b11 	vldr	d7, [pc, #68]	; 9578 <main+0x26c>
    9534:	ee86 7b07 	vdiv.f64	d7, d6, d7
    9538:	eefd 6bc7 	vcvt.s32.f64	s13, d7
    953c:	ee16 3a90 	vmov	r3, s13

  /* Draw window with a gradient color */
  s_fillbox(window->surface, 0, 0, w, h, s_rgbcolor(window->surface, 0, 0, 0));
  for (y=2; y<h-2; y++)
   {
    s_fillbox(window->surface, 2, y, w - 4, 1, s_rgbcolor(window->surface, 255 - (int) ((float) y * 255.00 / 400.00),
    9540:	f1c3 03ff 	rsb	r3, r3, #255	; 0xff
    9544:	4608      	mov	r0, r1
    9546:	4611      	mov	r1, r2
    9548:	461a      	mov	r2, r3
    954a:	23ff      	movs	r3, #255	; 0xff
    954c:	f7ff ebce 	blx	8cec <_init+0x1b8>
    9550:	4603      	mov	r3, r0
    9552:	2201      	movs	r2, #1
    9554:	9200      	str	r2, [sp, #0]
    9556:	9301      	str	r3, [sp, #4]
    9558:	4628      	mov	r0, r5
    955a:	2102      	movs	r1, #2
    955c:	6b7a      	ldr	r2, [r7, #52]	; 0x34
    955e:	4623      	mov	r3, r4
    9560:	f7ff ebca 	blx	8cf8 <_init+0x1c4>
  window->surface->height = h;
  window->surface->vbuf = (unsigned char *) malloc(w * h * window->surface->bytesperpixel);

  /* Draw window with a gradient color */
  s_fillbox(window->surface, 0, 0, w, h, s_rgbcolor(window->surface, 0, 0, 0));
  for (y=2; y<h-2; y++)
    9564:	6b7b      	ldr	r3, [r7, #52]	; 0x34
    9566:	3301      	adds	r3, #1
    9568:	637b      	str	r3, [r7, #52]	; 0x34
    956a:	e009      	b.n	9580 <main+0x274>
    956c:	f3af 8000 	nop.w
    9570:	00000000 	.word	0x00000000
    9574:	406fe000 	.word	0x406fe000
    9578:	00000000 	.word	0x00000000
    957c:	40790000 	.word	0x40790000
    9580:	6a7b      	ldr	r3, [r7, #36]	; 0x24
    9582:	1e9a      	subs	r2, r3, #2
    9584:	6b7b      	ldr	r3, [r7, #52]	; 0x34
    9586:	429a      	cmp	r2, r3
    9588:	dcac      	bgt.n	94e4 <main+0x1d8>
                                                                           255 - (int) ((float) y * 255.00 / 400.00),
		                                                           255));
   }

  /* Initialize img structs */
  s_image_init(&img1);
    958a:	f107 030c 	add.w	r3, r7, #12
    958e:	4618      	mov	r0, r3
    9590:	f7ff eb22 	blx	8bd8 <_init+0xa4>
  s_image_img(file1, img1);
    9594:	68fb      	ldr	r3, [r7, #12]
    9596:	6b38      	ldr	r0, [r7, #48]	; 0x30
    9598:	4619      	mov	r1, r3
    959a:	f7ff eb24 	blx	8be4 <_init+0xb0>
  s_image_init(&img2);
    959e:	f107 0308 	add.w	r3, r7, #8
    95a2:	4618      	mov	r0, r3
    95a4:	f7ff eb18 	blx	8bd8 <_init+0xa4>
  s_image_img(file2, img2);
    95a8:	68bb      	ldr	r3, [r7, #8]
    95aa:	6af8      	ldr	r0, [r7, #44]	; 0x2c
    95ac:	4619      	mov	r1, r3
    95ae:	f7ff eb1a 	blx	8be4 <_init+0xb0>

  /* Paste imgs to the surface */
  s_putboxrgba(window->surface, 30 + img1->x, 20 + img1->y, img1->w, img1->h, img1->rgba);
    95b2:	697b      	ldr	r3, [r7, #20]
    95b4:	6b58      	ldr	r0, [r3, #52]	; 0x34
    95b6:	68fb      	ldr	r3, [r7, #12]
    95b8:	685b      	ldr	r3, [r3, #4]
    95ba:	f103 011e 	add.w	r1, r3, #30
    95be:	68fb      	ldr	r3, [r7, #12]
    95c0:	689b      	ldr	r3, [r3, #8]
    95c2:	f103 0214 	add.w	r2, r3, #20
    95c6:	68fb      	ldr	r3, [r7, #12]
    95c8:	68db      	ldr	r3, [r3, #12]
    95ca:	68fc      	ldr	r4, [r7, #12]
    95cc:	6925      	ldr	r5, [r4, #16]
    95ce:	68fc      	ldr	r4, [r7, #12]
    95d0:	6a64      	ldr	r4, [r4, #36]	; 0x24
    95d2:	9500      	str	r5, [sp, #0]
    95d4:	9401      	str	r4, [sp, #4]
    95d6:	f7ff eb4e 	blx	8c74 <_init+0x140>
  s_putboxrgba(window->surface, 40 + img2->x, 170 + img2->y, img2->w, img2->h, img2->rgba);
    95da:	697b      	ldr	r3, [r7, #20]
    95dc:	6b58      	ldr	r0, [r3, #52]	; 0x34
    95de:	68bb      	ldr	r3, [r7, #8]
    95e0:	685b      	ldr	r3, [r3, #4]
    95e2:	f103 0128 	add.w	r1, r3, #40	; 0x28
    95e6:	68bb      	ldr	r3, [r7, #8]
    95e8:	689b      	ldr	r3, [r3, #8]
    95ea:	f103 02aa 	add.w	r2, r3, #170	; 0xaa
    95ee:	68bb      	ldr	r3, [r7, #8]
    95f0:	68db      	ldr	r3, [r3, #12]
    95f2:	68bc      	ldr	r4, [r7, #8]
    95f4:	6925      	ldr	r5, [r4, #16]
    95f6:	68bc      	ldr	r4, [r7, #8]
    95f8:	6a64      	ldr	r4, [r4, #36]	; 0x24
    95fa:	9500      	str	r5, [sp, #0]
    95fc:	9401      	str	r4, [sp, #4]
    95fe:	f7ff eb3a 	blx	8c74 <_init+0x140>

  /* Uninitialize img struct */
  s_image_uninit(img1);
    9602:	68fb      	ldr	r3, [r7, #12]
    9604:	4618      	mov	r0, r3
    9606:	f7ff eab2 	blx	8b6c <_init+0x38>
  s_image_uninit(img2);
    960a:	68bb      	ldr	r3, [r7, #8]
    960c:	4618      	mov	r0, r3
    960e:	f7ff eaae 	blx	8b6c <_init+0x38>

  /* Setup the fonts for the heading text */
  s_font_init(&font, "arial.ttf");
    9612:	f107 031c 	add.w	r3, r7, #28
    9616:	4618      	mov	r0, r3
    9618:	f649 3108 	movw	r1, #39688	; 0x9b08
    961c:	f2c0 0100 	movt	r1, #0
    9620:	f7ff eb10 	blx	8c44 <_init+0x110>
  s_font_set_str(font, "Xynth LED-Demo");
    9624:	69fb      	ldr	r3, [r7, #28]
    9626:	4618      	mov	r0, r3
    9628:	f649 3114 	movw	r1, #39700	; 0x9b14
    962c:	f2c0 0100 	movt	r1, #0
    9630:	f7ff eade 	blx	8bf0 <_init+0xbc>
  s_font_set_size(font, 32);
    9634:	69fb      	ldr	r3, [r7, #28]
    9636:	4618      	mov	r0, r3
    9638:	2120      	movs	r1, #32
    963a:	f7ff eaec 	blx	8c14 <_init+0xe0>
  s_font_get_glyph(font);
    963e:	69fb      	ldr	r3, [r7, #28]
    9640:	4618      	mov	r0, r3
    9642:	f7ff eaa6 	blx	8b90 <_init+0x5c>
  s_image_get_handler(font->glyph.img);
    9646:	69fb      	ldr	r3, [r7, #28]
    9648:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
    964a:	4618      	mov	r0, r3
    964c:	f7ff eb66 	blx	8d1c <_init+0x1e8>
  s_putboxrgba(window->surface, 165, 80, font->glyph.img->w, font->glyph.img->h, font->glyph.img->rgba);
    9650:	697b      	ldr	r3, [r7, #20]
    9652:	6b5a      	ldr	r2, [r3, #52]	; 0x34
    9654:	69fb      	ldr	r3, [r7, #28]
    9656:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
    9658:	68db      	ldr	r3, [r3, #12]
    965a:	69f9      	ldr	r1, [r7, #28]
    965c:	6bc9      	ldr	r1, [r1, #60]	; 0x3c
    965e:	6908      	ldr	r0, [r1, #16]
    9660:	69f9      	ldr	r1, [r7, #28]
    9662:	6bc9      	ldr	r1, [r1, #60]	; 0x3c
    9664:	6a49      	ldr	r1, [r1, #36]	; 0x24
    9666:	9000      	str	r0, [sp, #0]
    9668:	9101      	str	r1, [sp, #4]
    966a:	4610      	mov	r0, r2
    966c:	21a5      	movs	r1, #165	; 0xa5
    966e:	2250      	movs	r2, #80	; 0x50
    9670:	f7ff eb00 	blx	8c74 <_init+0x140>
  s_fillbox(window->surface, 165, 80 + font->glyph.img->h + 2, font->glyph.img->w, 2, 0);
    9674:	697b      	ldr	r3, [r7, #20]
    9676:	6b59      	ldr	r1, [r3, #52]	; 0x34
    9678:	69fb      	ldr	r3, [r7, #28]
    967a:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
    967c:	691b      	ldr	r3, [r3, #16]
    967e:	f103 0252 	add.w	r2, r3, #82	; 0x52
    9682:	69fb      	ldr	r3, [r7, #28]
    9684:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
    9686:	68db      	ldr	r3, [r3, #12]
    9688:	2002      	movs	r0, #2
    968a:	9000      	str	r0, [sp, #0]
    968c:	2000      	movs	r0, #0
    968e:	9001      	str	r0, [sp, #4]
    9690:	4608      	mov	r0, r1
    9692:	21a5      	movs	r1, #165	; 0xa5
    9694:	f7ff eb30 	blx	8cf8 <_init+0x1c4>
  s_font_uninit(font);
    9698:	69fb      	ldr	r3, [r7, #28]
    969a:	4618      	mov	r0, r3
    969c:	f7ff eacc 	blx	8c38 <_init+0x104>

  /* Create the first button */
  s_fillbox(window->surface, 158, 200, 70, 70, s_rgbcolor(window->surface, 0, 0, 0));
    96a0:	697b      	ldr	r3, [r7, #20]
    96a2:	6b5c      	ldr	r4, [r3, #52]	; 0x34
    96a4:	697b      	ldr	r3, [r7, #20]
    96a6:	6b5b      	ldr	r3, [r3, #52]	; 0x34
    96a8:	4618      	mov	r0, r3
    96aa:	2100      	movs	r1, #0
    96ac:	2200      	movs	r2, #0
    96ae:	2300      	movs	r3, #0
    96b0:	f7ff eb1c 	blx	8cec <_init+0x1b8>
    96b4:	4603      	mov	r3, r0
    96b6:	2246      	movs	r2, #70	; 0x46
    96b8:	9200      	str	r2, [sp, #0]
    96ba:	9301      	str	r3, [sp, #4]
    96bc:	4620      	mov	r0, r4
    96be:	219e      	movs	r1, #158	; 0x9e
    96c0:	22c8      	movs	r2, #200	; 0xc8
    96c2:	2346      	movs	r3, #70	; 0x46
    96c4:	f7ff eb18 	blx	8cf8 <_init+0x1c4>
  s_fillbox(window->surface, 162, 204, 62, 62, s_rgbcolor(window->surface, 30, 255, 30));
    96c8:	697b      	ldr	r3, [r7, #20]
    96ca:	6b5c      	ldr	r4, [r3, #52]	; 0x34
    96cc:	697b      	ldr	r3, [r7, #20]
    96ce:	6b5b      	ldr	r3, [r3, #52]	; 0x34
    96d0:	4618      	mov	r0, r3
    96d2:	211e      	movs	r1, #30
    96d4:	22ff      	movs	r2, #255	; 0xff
    96d6:	231e      	movs	r3, #30
    96d8:	f7ff eb08 	blx	8cec <_init+0x1b8>
    96dc:	4603      	mov	r3, r0
    96de:	223e      	movs	r2, #62	; 0x3e
    96e0:	9200      	str	r2, [sp, #0]
    96e2:	9301      	str	r3, [sp, #4]
    96e4:	4620      	mov	r0, r4
    96e6:	21a2      	movs	r1, #162	; 0xa2
    96e8:	22cc      	movs	r2, #204	; 0xcc
    96ea:	233e      	movs	r3, #62	; 0x3e
    96ec:	f7ff eb04 	blx	8cf8 <_init+0x1c4>

  /* Setup the fonts for the led off text */
  s_font_init(&font, "arial.ttf");
    96f0:	f107 031c 	add.w	r3, r7, #28
    96f4:	4618      	mov	r0, r3
    96f6:	f649 3108 	movw	r1, #39688	; 0x9b08
    96fa:	f2c0 0100 	movt	r1, #0
    96fe:	f7ff eaa2 	blx	8c44 <_init+0x110>
  s_font_set_str(font, "LED 1");
    9702:	69fb      	ldr	r3, [r7, #28]
    9704:	4618      	mov	r0, r3
    9706:	f649 3124 	movw	r1, #39716	; 0x9b24
    970a:	f2c0 0100 	movt	r1, #0
    970e:	f7ff ea70 	blx	8bf0 <_init+0xbc>
  s_font_set_size(font, 20);
    9712:	69fb      	ldr	r3, [r7, #28]
    9714:	4618      	mov	r0, r3
    9716:	2114      	movs	r1, #20
    9718:	f7ff ea7c 	blx	8c14 <_init+0xe0>
  s_font_set_rgb(font, 255, 255, 0);
    971c:	69fb      	ldr	r3, [r7, #28]
    971e:	4618      	mov	r0, r3
    9720:	21ff      	movs	r1, #255	; 0xff
    9722:	22ff      	movs	r2, #255	; 0xff
    9724:	2300      	movs	r3, #0
    9726:	f7ff ea3a 	blx	8b9c <_init+0x68>
  s_font_get_glyph(font);
    972a:	69fb      	ldr	r3, [r7, #28]
    972c:	4618      	mov	r0, r3
    972e:	f7ff ea30 	blx	8b90 <_init+0x5c>
  s_image_get_handler(font->glyph.img);
    9732:	69fb      	ldr	r3, [r7, #28]
    9734:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
    9736:	4618      	mov	r0, r3
    9738:	f7ff eaf0 	blx	8d1c <_init+0x1e8>
  s_putboxrgba(window->surface, 166, 180, font->glyph.img->w, font->glyph.img->h, font->glyph.img->rgba);
    973c:	697b      	ldr	r3, [r7, #20]
    973e:	6b5a      	ldr	r2, [r3, #52]	; 0x34
    9740:	69fb      	ldr	r3, [r7, #28]
    9742:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
    9744:	68db      	ldr	r3, [r3, #12]
    9746:	69f9      	ldr	r1, [r7, #28]
    9748:	6bc9      	ldr	r1, [r1, #60]	; 0x3c
    974a:	6908      	ldr	r0, [r1, #16]
    974c:	69f9      	ldr	r1, [r7, #28]
    974e:	6bc9      	ldr	r1, [r1, #60]	; 0x3c
    9750:	6a49      	ldr	r1, [r1, #36]	; 0x24
    9752:	9000      	str	r0, [sp, #0]
    9754:	9101      	str	r1, [sp, #4]
    9756:	4610      	mov	r0, r2
    9758:	21a6      	movs	r1, #166	; 0xa6
    975a:	22b4      	movs	r2, #180	; 0xb4
    975c:	f7ff ea8a 	blx	8c74 <_init+0x140>
  s_font_uninit(font);
    9760:	69fb      	ldr	r3, [r7, #28]
    9762:	4618      	mov	r0, r3
    9764:	f7ff ea68 	blx	8c38 <_init+0x104>
	
  /* Install the mouse callback handler for the led_off button */
  s_handler_init(&hndl);
    9768:	f107 0318 	add.w	r3, r7, #24
    976c:	4618      	mov	r0, r3
    976e:	f7ff ea9a 	blx	8ca4 <_init+0x170>
  hndl->type = MOUSE_HANDLER;
    9772:	69bb      	ldr	r3, [r7, #24]
    9774:	2201      	movs	r2, #1
    9776:	601a      	str	r2, [r3, #0]
  hndl->mouse.x = 160;
    9778:	69bb      	ldr	r3, [r7, #24]
    977a:	22a0      	movs	r2, #160	; 0xa0
    977c:	605a      	str	r2, [r3, #4]
  hndl->mouse.y = 200;
    977e:	69bb      	ldr	r3, [r7, #24]
    9780:	22c8      	movs	r2, #200	; 0xc8
    9782:	609a      	str	r2, [r3, #8]
  hndl->mouse.w = 100;
    9784:	69bb      	ldr	r3, [r7, #24]
    9786:	2264      	movs	r2, #100	; 0x64
    9788:	60da      	str	r2, [r3, #12]
  hndl->mouse.h = 100;
    978a:	69bb      	ldr	r3, [r7, #24]
    978c:	2264      	movs	r2, #100	; 0x64
    978e:	611a      	str	r2, [r3, #16]
  hndl->mouse.o = led1_toggle;
    9790:	69ba      	ldr	r2, [r7, #24]
    9792:	f249 033d 	movw	r3, #36925	; 0x903d
    9796:	f2c0 0300 	movt	r3, #0
    979a:	6253      	str	r3, [r2, #36]	; 0x24
  hndl->mouse.button = MOUSE_BUTTON_LEFT;
    979c:	69bb      	ldr	r3, [r7, #24]
    979e:	2204      	movs	r2, #4
    97a0:	615a      	str	r2, [r3, #20]
  s_handler_add(window, hndl);
    97a2:	697a      	ldr	r2, [r7, #20]
    97a4:	69bb      	ldr	r3, [r7, #24]
    97a6:	4610      	mov	r0, r2
    97a8:	4619      	mov	r1, r3
    97aa:	f7ff ea70 	blx	8c8c <_init+0x158>

  /* Create the second button */
  s_fillbox(window->surface, 380, 200, 70, 70, s_rgbcolor(window->surface, 0, 0, 0));
    97ae:	697b      	ldr	r3, [r7, #20]
    97b0:	6b5c      	ldr	r4, [r3, #52]	; 0x34
    97b2:	697b      	ldr	r3, [r7, #20]
    97b4:	6b5b      	ldr	r3, [r3, #52]	; 0x34
    97b6:	4618      	mov	r0, r3
    97b8:	2100      	movs	r1, #0
    97ba:	2200      	movs	r2, #0
    97bc:	2300      	movs	r3, #0
    97be:	f7ff ea96 	blx	8cec <_init+0x1b8>
    97c2:	4603      	mov	r3, r0
    97c4:	2246      	movs	r2, #70	; 0x46
    97c6:	9200      	str	r2, [sp, #0]
    97c8:	9301      	str	r3, [sp, #4]
    97ca:	4620      	mov	r0, r4
    97cc:	f44f 71be 	mov.w	r1, #380	; 0x17c
    97d0:	22c8      	movs	r2, #200	; 0xc8
    97d2:	2346      	movs	r3, #70	; 0x46
    97d4:	f7ff ea90 	blx	8cf8 <_init+0x1c4>
  s_fillbox(window->surface, 384, 204, 62, 62, s_rgbcolor(window->surface, 30, 255, 30));
    97d8:	697b      	ldr	r3, [r7, #20]
    97da:	6b5c      	ldr	r4, [r3, #52]	; 0x34
    97dc:	697b      	ldr	r3, [r7, #20]
    97de:	6b5b      	ldr	r3, [r3, #52]	; 0x34
    97e0:	4618      	mov	r0, r3
    97e2:	211e      	movs	r1, #30
    97e4:	22ff      	movs	r2, #255	; 0xff
    97e6:	231e      	movs	r3, #30
    97e8:	f7ff ea80 	blx	8cec <_init+0x1b8>
    97ec:	4603      	mov	r3, r0
    97ee:	223e      	movs	r2, #62	; 0x3e
    97f0:	9200      	str	r2, [sp, #0]
    97f2:	9301      	str	r3, [sp, #4]
    97f4:	4620      	mov	r0, r4
    97f6:	f44f 71c0 	mov.w	r1, #384	; 0x180
    97fa:	22cc      	movs	r2, #204	; 0xcc
    97fc:	233e      	movs	r3, #62	; 0x3e
    97fe:	f7ff ea7c 	blx	8cf8 <_init+0x1c4>

  /* Setup the fonts for the led_on text */
  s_font_init(&font, "arial.ttf");
    9802:	f107 031c 	add.w	r3, r7, #28
    9806:	4618      	mov	r0, r3
    9808:	f649 3108 	movw	r1, #39688	; 0x9b08
    980c:	f2c0 0100 	movt	r1, #0
    9810:	f7ff ea18 	blx	8c44 <_init+0x110>
  s_font_set_str(font, "LED 2");
    9814:	69fb      	ldr	r3, [r7, #28]
    9816:	4618      	mov	r0, r3
    9818:	f649 312c 	movw	r1, #39724	; 0x9b2c
    981c:	f2c0 0100 	movt	r1, #0
    9820:	f7ff e9e6 	blx	8bf0 <_init+0xbc>
  s_font_set_size(font, 20);
    9824:	69fb      	ldr	r3, [r7, #28]
    9826:	4618      	mov	r0, r3
    9828:	2114      	movs	r1, #20
    982a:	f7ff e9f4 	blx	8c14 <_init+0xe0>
  s_font_set_rgb(font, 255, 255, 0);
    982e:	69fb      	ldr	r3, [r7, #28]
    9830:	4618      	mov	r0, r3
    9832:	21ff      	movs	r1, #255	; 0xff
    9834:	22ff      	movs	r2, #255	; 0xff
    9836:	2300      	movs	r3, #0
    9838:	f7ff e9b0 	blx	8b9c <_init+0x68>
  s_font_get_glyph(font);
    983c:	69fb      	ldr	r3, [r7, #28]
    983e:	4618      	mov	r0, r3
    9840:	f7ff e9a6 	blx	8b90 <_init+0x5c>
  s_image_get_handler(font->glyph.img);
    9844:	69fb      	ldr	r3, [r7, #28]
    9846:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
    9848:	4618      	mov	r0, r3
    984a:	f7ff ea68 	blx	8d1c <_init+0x1e8>
  s_putboxrgba(window->surface, 390, 180, font->glyph.img->w, font->glyph.img->h, font->glyph.img->rgba);
    984e:	697b      	ldr	r3, [r7, #20]
    9850:	6b5a      	ldr	r2, [r3, #52]	; 0x34
    9852:	69fb      	ldr	r3, [r7, #28]
    9854:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
    9856:	68db      	ldr	r3, [r3, #12]
    9858:	69f9      	ldr	r1, [r7, #28]
    985a:	6bc9      	ldr	r1, [r1, #60]	; 0x3c
    985c:	6908      	ldr	r0, [r1, #16]
    985e:	69f9      	ldr	r1, [r7, #28]
    9860:	6bc9      	ldr	r1, [r1, #60]	; 0x3c
    9862:	6a49      	ldr	r1, [r1, #36]	; 0x24
    9864:	9000      	str	r0, [sp, #0]
    9866:	9101      	str	r1, [sp, #4]
    9868:	4610      	mov	r0, r2
    986a:	f44f 71c3 	mov.w	r1, #390	; 0x186
    986e:	22b4      	movs	r2, #180	; 0xb4
    9870:	f7ff ea00 	blx	8c74 <_init+0x140>
  s_font_uninit(font);
    9874:	69fb      	ldr	r3, [r7, #28]
    9876:	4618      	mov	r0, r3
    9878:	f7ff e9de 	blx	8c38 <_init+0x104>

  /* Install the mouse callback handler for the led_on button */
  s_handler_init(&hndl);
    987c:	f107 0318 	add.w	r3, r7, #24
    9880:	4618      	mov	r0, r3
    9882:	f7ff ea10 	blx	8ca4 <_init+0x170>
  hndl->type = MOUSE_HANDLER;
    9886:	69bb      	ldr	r3, [r7, #24]
    9888:	2201      	movs	r2, #1
    988a:	601a      	str	r2, [r3, #0]
  hndl->mouse.x = 380;
    988c:	69bb      	ldr	r3, [r7, #24]
    988e:	f44f 72be 	mov.w	r2, #380	; 0x17c
    9892:	605a      	str	r2, [r3, #4]
  hndl->mouse.y = 200;
    9894:	69bb      	ldr	r3, [r7, #24]
    9896:	22c8      	movs	r2, #200	; 0xc8
    9898:	609a      	str	r2, [r3, #8]
  hndl->mouse.w = 100;
    989a:	69bb      	ldr	r3, [r7, #24]
    989c:	2264      	movs	r2, #100	; 0x64
    989e:	60da      	str	r2, [r3, #12]
  hndl->mouse.h = 100;
    98a0:	69bb      	ldr	r3, [r7, #24]
    98a2:	2264      	movs	r2, #100	; 0x64
    98a4:	611a      	str	r2, [r3, #16]
  hndl->mouse.o = led2_toggle;
    98a6:	69ba      	ldr	r2, [r7, #24]
    98a8:	f249 1365 	movw	r3, #37221	; 0x9165
    98ac:	f2c0 0300 	movt	r3, #0
    98b0:	6253      	str	r3, [r2, #36]	; 0x24
  hndl->mouse.button = MOUSE_BUTTON_LEFT;
    98b2:	69bb      	ldr	r3, [r7, #24]
    98b4:	2204      	movs	r2, #4
    98b6:	615a      	str	r2, [r3, #20]
  s_handler_add(window, hndl);
    98b8:	697a      	ldr	r2, [r7, #20]
    98ba:	69bb      	ldr	r3, [r7, #24]
    98bc:	4610      	mov	r0, r2
    98be:	4619      	mov	r1, r3
    98c0:	f7ff e9e4 	blx	8c8c <_init+0x158>

  /* Setup a timer handler */
  s_timer_init(&timer);
    98c4:	f107 0310 	add.w	r3, r7, #16
    98c8:	4618      	mov	r0, r3
    98ca:	f7ff e9e6 	blx	8c98 <_init+0x164>
  timer->timeval = 500;
    98ce:	6939      	ldr	r1, [r7, #16]
    98d0:	f44f 72fa 	mov.w	r2, #500	; 0x1f4
    98d4:	f04f 0300 	mov.w	r3, #0
    98d8:	e9c1 2300 	strd	r2, r3, [r1]
  timer->cb = timer0_handler;
    98dc:	693a      	ldr	r2, [r7, #16]
    98de:	f249 2395 	movw	r3, #37525	; 0x9295
    98e2:	f2c0 0300 	movt	r3, #0
    98e6:	6113      	str	r3, [r2, #16]
  s_timer_add(window, timer);
    98e8:	697a      	ldr	r2, [r7, #20]
    98ea:	693b      	ldr	r3, [r7, #16]
    98ec:	4610      	mov	r0, r2
    98ee:	4619      	mov	r1, r3
    98f0:	f7ff e948 	blx	8b84 <_init+0x50>

  /* Show the window on the screen */
  s_window_show(window);
    98f4:	697b      	ldr	r3, [r7, #20]
    98f6:	4618      	mov	r0, r3
    98f8:	f7ff e9aa 	blx	8c50 <_init+0x11c>
  s_window_main(window);
    98fc:	697b      	ldr	r3, [r7, #20]
    98fe:	4618      	mov	r0, r3
    9900:	f7ff e9d6 	blx	8cb0 <_init+0x17c>

  return 0;
    9904:	2300      	movs	r3, #0
 }
    9906:	4618      	mov	r0, r3
    9908:	3738      	adds	r7, #56	; 0x38
    990a:	46bd      	mov	sp, r7
    990c:	bdb0      	pop	{r4, r5, r7, pc}
    990e:	bf00      	nop

00009910 <__libc_csu_init>:
    9910:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
    9914:	4607      	mov	r7, r0
    9916:	4e0c      	ldr	r6, [pc, #48]	; (9948 <__libc_csu_init+0x38>)
    9918:	4688      	mov	r8, r1
    991a:	4691      	mov	r9, r2
    991c:	4d0b      	ldr	r5, [pc, #44]	; (994c <__libc_csu_init+0x3c>)
    991e:	447e      	add	r6, pc
    9920:	f7ff e908 	blx	8b34 <_init>
    9924:	447d      	add	r5, pc
    9926:	1b76      	subs	r6, r6, r5
    9928:	10b6      	asrs	r6, r6, #2
    992a:	d00a      	beq.n	9942 <__libc_csu_init+0x32>
    992c:	3d04      	subs	r5, #4
    992e:	2400      	movs	r4, #0
    9930:	3401      	adds	r4, #1
    9932:	f855 3f04 	ldr.w	r3, [r5, #4]!
    9936:	4638      	mov	r0, r7
    9938:	4641      	mov	r1, r8
    993a:	464a      	mov	r2, r9
    993c:	4798      	blx	r3
    993e:	42b4      	cmp	r4, r6
    9940:	d1f6      	bne.n	9930 <__libc_csu_init+0x20>
    9942:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
    9946:	bf00      	nop
    9948:	00008222 	.word	0x00008222
    994c:	00008218 	.word	0x00008218

00009950 <__libc_csu_fini>:
    9950:	4770      	bx	lr
    9952:	bf00      	nop

Disassembly of section .fini:

00009954 <_fini>:
    9954:	e92d4008 	push	{r3, lr}
    9958:	e8bd8008 	pop	{r3, pc}
